To do when adding new instructions

- Create an instruction class (Instruction.scala) and validation test (ValidationTest.scala)
- Add any new tokens (like instruction name) to lexer (Lexer.scala)
- Create a parser (Parser.scala) and parse test (ParserTest.scala)
- Add cases in ModuleIO (ModuleIO.scala)
  - Add ID (end of file)
  - TextModuleWriter.writeInstruction
  - BinaryModuleWriter.writeDefinition
  - BinaryModuleReader.readDefinition
  - increment ModuleIO.VERSION if first change in this version

- Add LLVM support
  If the new instruction corresponds to an LLVM instruction direction
    - New LLVM instruction (if not already present)
    - Conversion in TungstenToLlvmConverter
    - Test in TungstenToLlvmConverterTest
    - Backward conversion in LlvmToTungstenConverter
    - Test in LlvmToTungstenConverterTest
  Else
    - Conversion in LlvmCompatibilityPass
    - Test in LlvmCompatibilityPassTest



